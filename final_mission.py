import base64
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad
from utils import show_image

# ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏ß‡πâ (ciphertext) ‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡∏°‡∏±‡∏ô‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™
ciphertext = base64.b64decode("ekzO2yNTve1jhLKWpBoebA==")

# ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™
expected_plaintext = "Hello Hacker!!"

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥ AES Decryption
def aes_decrypt(key, iv, ciphertext):
    try:
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Cipher
        cipher = AES.new(key, AES.MODE_CBC, iv)
        # ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏•‡∏∞‡∏•‡∏ö padding
        decrypted = unpad(cipher.decrypt(ciphertext), AES.block_size).decode('utf-8')
        return decrypted
    except Exception as e:
        print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™: {e}")
        return None

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á Key ‡πÅ‡∏•‡∏∞ IV
def check_key_iv(key, iv):
    if len(key) != 16:
        print(f"‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: Key ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î 16 bytes ‡πÅ‡∏ï‡πà‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î {len(key)} bytes")
        return False
    if len(iv) != 16:
        print(f"‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: IV ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î 16 bytes ‡πÅ‡∏ï‡πà‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î {len(iv)} bytes")
        return False
    return True

def aes_task():
    print("üö® ‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏≤‡∏∞‡∏£‡∏∞‡∏ö‡∏ö‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô! üö®")
    print("‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏≤‡∏∞‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£.")
    
    print("[‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ‡∏Ç‡∏≠‡∏á Key...]")
    show_image("photo/hint1.jpg")  # ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ‡πÅ‡∏£‡∏Å
    key_input = input("üîë ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô Key (16 bytes): ").encode('utf-8')
    
    print("[‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ‡∏Ç‡∏≠‡∏á IV...]")
    show_image("photo/hint2.jpg")  # ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
    iv_input = input("üóùÔ∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô IV (16 bytes): ").encode('utf-8')

    print("[‡πÅ‡∏Æ‡πá‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•... 0%]")
    print("[‡πÅ‡∏Æ‡πá‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•... 25%]")
    print("[‡πÅ‡∏Æ‡πá‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•... 50%]")
    print("[‡πÅ‡∏Æ‡πá‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•... 75%]")
    print("[‡πÅ‡∏Æ‡πá‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•... 100%]")

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á Key ‡πÅ‡∏•‡∏∞ IV
    if not check_key_iv(key_input, iv_input):
        print("‚ùå ‡∏Å‡∏≤‡∏£‡πÅ‡∏Æ‡πá‡∏Å‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: Key ‡∏´‡∏£‡∏∑‡∏≠ IV ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!")
        return None, None

    # ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    decrypted_text = aes_decrypt(key_input, iv_input, ciphertext)
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™
    if decrypted_text:
        print(f"‚úÖ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏î‡πâ: {decrypted_text}")
        
    # ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏î‡πâ‡∏Å‡∏±‡∏ö expected_plaintext
    if decrypted_text == expected_plaintext:
        print("üí∏ [‡πÅ‡∏Æ‡πá‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!] ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß!")
        print(f"üéâ ‡πÉ‡∏ä‡πâ Key: {key_input.decode('utf-8')} ‡πÅ‡∏•‡∏∞ IV: {iv_input.decode('utf-8')} ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö.")
        print("üìÑ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à.")
        return key_input, iv_input
    else:
        print("üö® [‡∏Å‡∏≤‡∏£‡πÅ‡∏Æ‡πá‡∏Å‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß!] ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏õ‡πâ‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á.")
        return None, None

# ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
aes_task()
